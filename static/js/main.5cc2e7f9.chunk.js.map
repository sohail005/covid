{"version":3,"sources":["components/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","recovered","confirmed","deaths","active","updated","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAqFeA,EAhFD,WACV,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAY,uCAAG,8BAAAC,EAAA,+EAEMC,MAAM,0CAFZ,cAEPC,EAFO,gBAGWA,EAAIC,OAHf,OAGRC,EAHQ,OAIdC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALf,kDAOzBF,QAAQC,IAAR,MAPyB,0DAAH,qDAclB,OAHAE,qBAAU,WACRT,MACC,IAEC,qCAAE,gDACF,oCAEA,kDACA,uDACA,qBAAIU,UAAU,MAAd,UACI,oBAAIA,UAAU,OAAd,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACA,oBAAGA,UAAU,aAAb,UAA0B,sCAA1B,cACA,mBAAGA,UAAU,cAAb,0BAIR,oBAAIA,UAAU,OAAd,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACA,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,gBACA,mBAAGA,UAAU,cAAb,SAA4BZ,EAAKa,mBAIzC,oBAAID,UAAU,OAAd,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACA,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,gBACA,mBAAGA,UAAU,cAAb,SAA4BZ,EAAKc,sBAMxC,uBACL,qBAAIF,UAAU,MAAd,UACA,oBAAIA,UAAU,OAAd,SACQ,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACA,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,aACA,mBAAGA,UAAU,cAAb,SAA4BZ,EAAKe,gBAIzC,oBAAIH,UAAU,OAAd,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACA,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,aACA,mBAAGA,UAAU,cAAb,SAA4BZ,EAAKgB,gBAKzC,oBAAIJ,UAAU,OAAd,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACA,oBAAGA,UAAU,aAAb,UAA0B,wCAA1B,cACA,mBAAGA,UAAU,cAAb,SAA4BZ,EAAKiB,2BCjEtCC,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5cc2e7f9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './covid.css';\r\n\r\n\r\n\r\nconst Covid = ()=>{\r\n    const [data,setData] =useState([]);\r\n    const getCovidData = async()=>{\r\n        try{\r\n            const res = await  fetch('https://api.covid19india.org/data.json');\r\n           const actualData = await res.json();\r\n           console.log(actualData.statewise[0]);\r\n           setData(actualData.statewise[0])\r\n        }catch(err){\r\nconsole.log(err);\r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{\r\n      getCovidData(); \r\n    }, []);\r\n    return(\r\n        <><h4>By SohailPatel</h4>\r\n        <section>\r\n            \r\n        <h1>ðŸ”´LIVE</h1>\r\n        <h3>Current COVID19 Cases</h3>\r\n        <ul className=\"box\">\r\n            <li className=\"card\">\r\n                <div className=\"card__main\">\r\n                    <div className=\"card__inner\">\r\n                    <p className=\"card__name\"><span>IN</span> COUNTRY</p>\r\n                    <p className=\"card__small\">INDIA</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li className=\"card\">\r\n                <div className=\"card__main\">\r\n                    <div className=\"card__inner\">\r\n                    <p className=\"card__name\"><span>TOTAL</span> RECOVERED</p>\r\n                    <p className=\"card__small\">{data.recovered}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li className=\"card\">\r\n                <div className=\"card__main\">\r\n                    <div className=\"card__inner\">\r\n                    <p className=\"card__name\"><span>TOTAL</span> CONFIRMED</p>\r\n                    <p className=\"card__small\">{data.confirmed}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n           \r\n           \r\n        </ul><br/>\r\n        <ul className=\"net\"> \r\n        <li className=\"card\">\r\n                <div className=\"card__main\">\r\n                    <div className=\"card__inner\">\r\n                    <p className=\"card__name\"><span>TOTAL</span> DEATHS</p>\r\n                    <p className=\"card__small\">{data.deaths}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li className=\"card\">\r\n                <div className=\"card__main\">\r\n                    <div className=\"card__inner\">\r\n                    <p className=\"card__name\"><span>TOTAL</span> ACTIVE</p>\r\n                    <p className=\"card__small\">{data.active}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n          \r\n            <li className=\"card\">\r\n                <div className=\"card__main\">\r\n                    <div className=\"card__inner\">\r\n                    <p className=\"card__name\"><span>LAST</span> UPDATED</p>\r\n                    <p className=\"card__small\">{data.updated}</p>\r\n                    </div>\r\n                </div>\r\n            </li></ul>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\nexport default Covid;","\nimport './App.css';\nimport Covid from './components/covid';\n\nfunction App() {\n  return (\n    <>\n    <Covid />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}